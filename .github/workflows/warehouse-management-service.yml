# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: warehouse-management-system

on:
  push:
#    paths:
#      - warehouse-management-service/**
#  pull_request:
#    paths:
#      - warehouse-management-service/**

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v4
        with:
          go-version: "1.17"
          cache: false
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          working-directory: ./warehouse-management-service

  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Test
        env:
          DB_HOST: localhost
          DB_PORT: 5432
          DB_USERNAME: postgres
          DB_PASSWORD: postgres
          DB_NAME: postgres
          DB_SSL_MODE: disable
          LOG_LEVEL: debug
          DB_MIGRATION_SOURCE_PATH: file:///warehouse-management-service/db/migrations
        run: |
          cd warehouse-management-service
          go test -v ./...

  build-and-deploy-staging:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Build
        run: |
          cd warehouse-management-service
          go build -v ./cmd/wms
      - name: Deploy
        run: |
          ls
          sftp -i ./wms ${{ secrets.SERVER_USER }}@${{ secrets.SERVER }}
