// Code generated by MockGen. DO NOT EDIT.
// Source: warehouse-management-service/internal/handler (interfaces: ShelfBlockService)

// Package mock_handler is a generated GoMock package.
package mock_handler

import (
	context "context"
	reflect "reflect"
	wms "warehouse-management-service"

	gomock "github.com/golang/mock/gomock"
)

// MockShelfBlockService is a mock of ShelfBlockService interface.
type MockShelfBlockService struct {
	ctrl     *gomock.Controller
	recorder *MockShelfBlockServiceMockRecorder
}

// MockShelfBlockServiceMockRecorder is the mock recorder for MockShelfBlockService.
type MockShelfBlockServiceMockRecorder struct {
	mock *MockShelfBlockService
}

// NewMockShelfBlockService creates a new mock instance.
func NewMockShelfBlockService(ctrl *gomock.Controller) *MockShelfBlockService {
	mock := &MockShelfBlockService{ctrl: ctrl}
	mock.recorder = &MockShelfBlockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockShelfBlockService) EXPECT() *MockShelfBlockServiceMockRecorder {
	return m.recorder
}

// CreateShelfBlock mocks base method.
func (m *MockShelfBlockService) CreateShelfBlock(arg0 context.Context, arg1 wms.ShelfBlock) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateShelfBlock", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateShelfBlock indicates an expected call of CreateShelfBlock.
func (mr *MockShelfBlockServiceMockRecorder) CreateShelfBlock(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateShelfBlock", reflect.TypeOf((*MockShelfBlockService)(nil).CreateShelfBlock), arg0, arg1)
}

// DeleteShelfBlockById mocks base method.
func (m *MockShelfBlockService) DeleteShelfBlockById(arg0 context.Context, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteShelfBlockById", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteShelfBlockById indicates an expected call of DeleteShelfBlockById.
func (mr *MockShelfBlockServiceMockRecorder) DeleteShelfBlockById(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteShelfBlockById", reflect.TypeOf((*MockShelfBlockService)(nil).DeleteShelfBlockById), arg0, arg1)
}

// GetShelfBlockById mocks base method.
func (m *MockShelfBlockService) GetShelfBlockById(arg0 context.Context, arg1 string) (wms.ShelfBlock, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetShelfBlockById", arg0, arg1)
	ret0, _ := ret[0].(wms.ShelfBlock)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetShelfBlockById indicates an expected call of GetShelfBlockById.
func (mr *MockShelfBlockServiceMockRecorder) GetShelfBlockById(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetShelfBlockById", reflect.TypeOf((*MockShelfBlockService)(nil).GetShelfBlockById), arg0, arg1)
}

// UpdateShelfBlock mocks base method.
func (m *MockShelfBlockService) UpdateShelfBlock(arg0 context.Context, arg1 wms.ShelfBlock) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateShelfBlock", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateShelfBlock indicates an expected call of UpdateShelfBlock.
func (mr *MockShelfBlockServiceMockRecorder) UpdateShelfBlock(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateShelfBlock", reflect.TypeOf((*MockShelfBlockService)(nil).UpdateShelfBlock), arg0, arg1)
}
