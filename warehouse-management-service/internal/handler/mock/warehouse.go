// Code generated by MockGen. DO NOT EDIT.
// Source: ./warehouse.go

// Package mock_warehousemanagementservice is a generated GoMock package.
package mock_warehousemanagementservice

import (
	context "context"
	reflect "reflect"
	warehousemanagementservice "warehouse-management-service"

	gomock "github.com/golang/mock/gomock"
)

// MockWarehouseService is a mock of WarehouseService interface.
type MockWarehouseService struct {
	ctrl     *gomock.Controller
	recorder *MockWarehouseServiceMockRecorder
}

// MockWarehouseServiceMockRecorder is the mock recorder for MockWarehouseService.
type MockWarehouseServiceMockRecorder struct {
	mock *MockWarehouseService
}

// NewMockWarehouseService creates a new mock instance.
func NewMockWarehouseService(ctrl *gomock.Controller) *MockWarehouseService {
	mock := &MockWarehouseService{ctrl: ctrl}
	mock.recorder = &MockWarehouseServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWarehouseService) EXPECT() *MockWarehouseServiceMockRecorder {
	return m.recorder
}

// CreateWarehouse mocks base method.
func (m *MockWarehouseService) CreateWarehouse(ctx context.Context, warehouse *warehousemanagementservice.Warehouse) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateWarehouse", ctx, warehouse)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateWarehouse indicates an expected call of CreateWarehouse.
func (mr *MockWarehouseServiceMockRecorder) CreateWarehouse(ctx, warehouse interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateWarehouse", reflect.TypeOf((*MockWarehouseService)(nil).CreateWarehouse), ctx, warehouse)
}

// DeleteWarehouse mocks base method.
func (m *MockWarehouseService) DeleteWarehouse(ctx context.Context, id string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteWarehouse", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteWarehouse indicates an expected call of DeleteWarehouse.
func (mr *MockWarehouseServiceMockRecorder) DeleteWarehouse(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteWarehouse", reflect.TypeOf((*MockWarehouseService)(nil).DeleteWarehouse), ctx, id)
}

// GetWarehouseById mocks base method.
func (m *MockWarehouseService) GetWarehouseById(ctx context.Context, id string) (*warehousemanagementservice.Warehouse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWarehouseById", ctx, id)
	ret0, _ := ret[0].(*warehousemanagementservice.Warehouse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetWarehouseById indicates an expected call of GetWarehouseById.
func (mr *MockWarehouseServiceMockRecorder) GetWarehouseById(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWarehouseById", reflect.TypeOf((*MockWarehouseService)(nil).GetWarehouseById), ctx, id)
}

// UpdateWarehouse mocks base method.
func (m *MockWarehouseService) UpdateWarehouse(ctx context.Context, warehouse *warehousemanagementservice.Warehouse) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateWarehouse", ctx, warehouse)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateWarehouse indicates an expected call of UpdateWarehouse.
func (mr *MockWarehouseServiceMockRecorder) UpdateWarehouse(ctx, warehouse interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateWarehouse", reflect.TypeOf((*MockWarehouseService)(nil).UpdateWarehouse), ctx, warehouse)
}
