// Code generated by MockGen. DO NOT EDIT.
// Source: warehouse-management-service/internal/handler (interfaces: ShelfService)

// Package mock_handler is a generated GoMock package.
package mock_handler

import (
	context "context"
	reflect "reflect"
	wms "warehouse-management-service"

	gomock "github.com/golang/mock/gomock"
)

// MockShelfService is a mock of ShelfService interface.
type MockShelfService struct {
	ctrl     *gomock.Controller
	recorder *MockShelfServiceMockRecorder
}

// MockShelfServiceMockRecorder is the mock recorder for MockShelfService.
type MockShelfServiceMockRecorder struct {
	mock *MockShelfService
}

// NewMockShelfService creates a new mock instance.
func NewMockShelfService(ctrl *gomock.Controller) *MockShelfService {
	mock := &MockShelfService{ctrl: ctrl}
	mock.recorder = &MockShelfServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockShelfService) EXPECT() *MockShelfServiceMockRecorder {
	return m.recorder
}

// CreateShelf mocks base method.
func (m *MockShelfService) CreateShelf(arg0 context.Context, arg1 wms.Shelf) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateShelf", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateShelf indicates an expected call of CreateShelf.
func (mr *MockShelfServiceMockRecorder) CreateShelf(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateShelf", reflect.TypeOf((*MockShelfService)(nil).CreateShelf), arg0, arg1)
}

// DeleteShelfById mocks base method.
func (m *MockShelfService) DeleteShelfById(arg0 context.Context, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteShelfById", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteShelfById indicates an expected call of DeleteShelfById.
func (mr *MockShelfServiceMockRecorder) DeleteShelfById(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteShelfById", reflect.TypeOf((*MockShelfService)(nil).DeleteShelfById), arg0, arg1)
}

// GetShelfById mocks base method.
func (m *MockShelfService) GetShelfById(arg0 context.Context, arg1 string) (wms.Shelf, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetShelfById", arg0, arg1)
	ret0, _ := ret[0].(wms.Shelf)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetShelfById indicates an expected call of GetShelfById.
func (mr *MockShelfServiceMockRecorder) GetShelfById(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetShelfById", reflect.TypeOf((*MockShelfService)(nil).GetShelfById), arg0, arg1)
}

// UpdateShelf mocks base method.
func (m *MockShelfService) UpdateShelf(arg0 context.Context, arg1 wms.Shelf) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateShelf", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateShelf indicates an expected call of UpdateShelf.
func (mr *MockShelfServiceMockRecorder) UpdateShelf(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateShelf", reflect.TypeOf((*MockShelfService)(nil).UpdateShelf), arg0, arg1)
}
